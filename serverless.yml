service: my-angular-app

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  deploymentBucket:
    name: new-deployment-bucket-2446

plugins:
  - serverless-finch
  - serverless-s3-sync

custom:
  s3Sync:
    - bucketName: e-commerce-03
      localDir: dist/app/browser
  client:
    bucketName: e-commerce-03
    distributionFolder: dist/app/browser
    indexDocument: index.html
    errorDocument: index.html

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: e-commerce-03
        AccessControl: Private

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: e-commerce-03
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity E3AKD80G2NZMT4"
              Action: "s3:GetObject"
              Resource: !Sub "arn:aws:s3:::e-commerce-03/*"

    CloudFrontOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: Access identity for my-angular-app CloudFront

    MyDistribution:
      Type: "AWS::CloudFront::Distribution"
      Properties:
        DistributionConfig:
          Enabled: true
          Origins:
            - DomainName: !Sub "e-commerce-03.s3.amazonaws.com"
              Id: myS3Origin
              S3OriginConfig:
                OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/E3AKD80G2NZMT4"
          DefaultCacheBehavior:
            TargetOriginId: myS3Origin
            ViewerProtocolPolicy: redirect-to-https
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
          PriceClass: PriceClass_100
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

package:
  exclude:
    - node_modules/**
    - .serverless/**
    - .webpack/**
